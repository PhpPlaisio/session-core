/**
 * Logs the current user out of the current session.
 *
 * @param p_cmp_id            The ID of the company (safe guard).
 * @param p_ses_id            The ID of the session.
 * @param p_lan_id            The ID of the language of the session.
 * @param p_ses_session_token The new session token.
 * @param p_ses_csrf_token    The new CSRF token.
 *
 * @type row1
 */
create procedure abc_session_core_logout(in p_cmp_id            @abc_auth_session.cmp_id%type@,
                                         in p_ses_id            @abc_auth_session.ses_id%type@,
                                         in p_lan_id            @abc_auth_session.lan_id%type@,
                                         in p_ses_session_token @abc_auth_session.ses_session_token%type@,
                                         in p_ses_csrf_token    @abc_auth_session.ses_csrf_token%type@)
modifies sql data
begin
  declare l_usr_id @abc_auth_user.usr_id%type@;

  select usr_id
  into   l_usr_id
  from   ABC_AUTH_USER
  where  cmp_id        = p_cmp_id
  and    usr_anonymous = 1
  ;

  delete from ABC_AUTH_SESSION_NAMED_LOCK
  where ses_id = p_ses_id
  and   cmp_id = p_cmp_id
  ;

  delete from ABC_AUTH_SESSION_NAMED
  where ses_id = p_ses_id
  and   cmp_id = p_cmp_id
  ;

  update ABC_AUTH_SESSION
  set usr_id                = l_usr_id
  ,   lan_id                = p_lan_id
  ,   ses_session_token     = p_ses_session_token
  ,   ses_csrf_token        = p_ses_csrf_token
  ,   ses_has_flash_message = 0
  ,   ses_data              = null
  where ses_id = p_ses_id
  and   cmp_id = p_cmp_id
  ;

  call abc_session_core_get_session(p_cmp_id, p_ses_session_token);
end
