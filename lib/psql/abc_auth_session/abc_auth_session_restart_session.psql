/**
 * Restarts a session, i.e. all data stored in the session will be deleted.
 *
 * @param p_cmp_id            The ID of the company of the user (safe guard).
 * @param p_ses_id            The ID of the session.
 * @param p_lan_id            The ID of the language of the session.
 * @param p_ses_session_token The new session token.
 * @param p_ses_csrf_token    The new CSRF token.
 */
create procedure abc_auth_session_restart_session(in p_cmp_id            @abc_auth_session.cmp_id%type@,
                                                  in p_ses_id            @abc_auth_session.ses_id%type@,
                                                  in p_lan_id            @abc_auth_session.lan_id%type@,
                                                  in p_ses_session_token @abc_auth_session.ses_session_token%type@,
                                                  in p_ses_csrf_token    @abc_auth_session.ses_csrf_token%type@)
modifies sql data
-- type: row1
begin
  update     ABC_AUTH_SESSION ses
  inner join ABC_AUTH_COMPANY cmp  on  cmp.cmp_id = ses.cmp_id
  inner join ABC_AUTH_USER    usr  on  usr.cmp_id = ses.cmp_id and
                                       usr.usr_anonymous = 1
  set ses.ses_session_token = p_ses_session_token
  ,   ses.ses_csrf_token    = p_ses_csrf_token
  ,   ses.lan_id            = p_lan_id
  ,   ses.usr_id            = usr.usr_id
  ,   ses.ses_data          = null
  where ses.ses_id = p_ses_id
  and   cmp.cmp_id = p_cmp_id
  ;

  delete from ABC_AUTH_SESSION_NAMED_LOCK
  where ses_id = p_ses_id
  and   cmp_id = p_cmp_id
  ;

  delete from ABC_AUTH_SESSION_NAMED
  where ses_id = p_ses_id
  and   cmp_id = p_cmp_id
  ;

  call abc_auth_session_get_session(p_cmp_id, p_ses_session_token);
end
